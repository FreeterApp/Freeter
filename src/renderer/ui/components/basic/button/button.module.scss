/*
 * Copyright: (c) 2024, Alex Kaul
 * GNU General Public License v3.0 or later (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
 */

$borderSize: 1px;
$padding: 6px;
$innerHeightS: 14px;
$fontSizeS: 10px;
$innerHeightM: 18px;
$fontSizeM: 12px;
$innerHeightL: 24px;
$fontSizeL: 16px;

.button {
  display: inline-block;
  border-radius: 2px;
  box-sizing: border-box;
  white-space: nowrap;
  border: $borderSize solid transparent;
  &:not(.primary) {
    background-color: var(--freeter-buttonBackground);
    color: var(--freeter-buttonColor);
  }
  &.primary {
    background-color: var(--freeter-buttonPrimaryBackground);
    color: var(--freeter-buttonPrimaryColor);
  }
  &.size-s {
    height: $innerHeightS + $padding*2;
    line-height: $innerHeightS;
    font-size: $fontSizeS;
    &:not(.only-caption) {
      padding: $padding - $borderSize;
    }
    &.only-caption {
      padding: ($padding - $borderSize) ($padding * 3);
    }
    .button-icon {
      width: $innerHeightS;
      height: $innerHeightS;
    }
  }
  &.size-m {
    height: $innerHeightM + $padding*2;
    line-height: $innerHeightM;
    font-size: $fontSizeM;
    &:not(.only-caption) {
      padding: $padding - $borderSize;
    }
    &.only-caption {
      padding: ($padding - $borderSize) ($padding * 3);
    }
    .button-icon {
      width: $innerHeightM;
      height: $innerHeightM;
    }
  }
  &.size-l {
    height: $innerHeightL + $padding*2;
    line-height: $innerHeightL;
    font-size: $fontSizeL;
    &:not(.only-caption) {
      padding: $padding - $borderSize;
    }
    &.only-caption {
      padding: ($padding - $borderSize) ($padding * 3);
    }
    .button-icon {
      width: $innerHeightL;
      height: $innerHeightL;
    }
  }
  &.size-fill {
    width: 100%;
    height: 100%;
    border-radius: 0;
    &.only-icon {
      .button-icon {
        width: 100%;
        height: 100%;
        max-width: 48px;
        max-height: 48px;
      }
    }
  }
  &[disabled] {
    opacity: 0.2;
  }
  &:not([disabled]) {
    cursor: pointer;
    &:not(.primary) {
      &:hover {
        background-color: var(--freeter-buttonHoverBackground);
      }
      &:active, &:focus-visible {
        background-color: var(--freeter-buttonActiveBackground);
      }
    }
    &.primary {
      &:hover {
        background-color: var(--freeter-buttonPrimaryHoverBackground);
      }
      &:active, &:focus-visible {
        background-color: var(--freeter-buttonPrimaryActiveBackground);
      }
    }
  }
  &[aria-pressed='false'] {
    border: $borderSize solid transparent;
  }
  &[aria-pressed='true'] {
    border: $borderSize solid var(--freeter-buttonPressedBorder);
    background-color: var(--freeter-buttonPressedBackground) !important;
    color: var(--freeter-buttonPressedColor);
  }
}

.button-icon {
  pointer-events: none;
}
